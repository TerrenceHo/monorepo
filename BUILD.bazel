load("@bazel_gazelle//:def.bzl", "DEFAULT_LANGUAGES", "gazelle", "gazelle_binary")
load("@rules_python//gazelle:def.bzl", "GAZELLE_PYTHON_RUNTIME_DEPS")

# Gazelle configration options
# https://github.com/bazelbuild/bazel-gazelle#running-gazelle-with-bazel
# gazelle:prefix github.com/TerrenceHo/monorepo
# gazelle:build_file_name BUILD.bazel
#
# Exclusions
# gazelle:exclude */vendor
# gazelle:exclude .bazel
# gazelle:exclude bazel-out
# gazelle:exclude **/node_modules
# gazelle:exclude third_party
# gazelle:exclude *_test.go

# Being explicit about naming conventions
# gazelle:go_naming_convention import
# gazelle:go_naming_convention_external import

# gazelle:map_kind go_binary go_binary //bazel/go:default.bzl
# gazelle:map_kind go_library go_library //bazel/go:default.bzl
# gazelle:map_kind go_test go_test //bazel/go:default.bzl

# gazelle:map_kind py_binary py_binary //bazel/python:rules.bzl
# gazelle:map_kind py_library py_library //bazel/python:rules.bzl
# gazelle:map_kind py_test py_test //bazel/python:rules.bzl

# For each Python project, add it as a root, so that the imports don't have to
# be relative from the root of the monorepo, which makes it more Pythonic in
# terms of classic project setup.
# gazelle:python_root //example-python

gazelle_binary(
    name = "gazelle_binary",
    languages = DEFAULT_LANGUAGES + [
        "@rules_python//gazelle",  # use gazelle from rules_python
    ],
    visibility = ["//visibility:public"],
)

gazelle(
    name = "gazelle",
    data = GAZELLE_PYTHON_RUNTIME_DEPS,
    gazelle = "//:gazelle_binary",
)

# update_build_files is a convenience target. See
# https://github.com/bazelbuild/bazel-gazelle#update-repos.
gazelle(
    name = "update_build_files",
    command = "update",
    data = GAZELLE_PYTHON_RUNTIME_DEPS,
    gazelle = "//:gazelle_binary",
)

# check_build_files diffs which BUILD files are going to change. Exits with code
# 1 if files need to change, else code 0.
gazelle(
    name = "check_build_files",
    command = "update",
    data = GAZELLE_PYTHON_RUNTIME_DEPS,
    extra_args = [
        "-mode",
        "diff",
    ],
    gazelle = "//:gazelle_binary",
)

# update_go_deps is a convenience target. See
# https://github.com/bazelbuild/bazel-gazelle#update-repos.
gazelle(
    name = "update_go_deps",
    args = [
        "-to_macro=bazel/go/deps.bzl%fetch_go_deps",
        "-from_file=go.mod",
        # -build_file_proto_mod=disable_global is set so that all pregenerated
        # pb.go files are used for all external repos. Prevents lots of
        # warnings.
        # "-build_file_proto_mode=disable_global",
        "-prune=true",
    ],
    command = "update-repos",
)
